import java.util.Scanner;
import java.io.*;

class Operation {
    int x[] = new int[20];
    int count = 0;

    public boolean place(int row, int column) {
        for (int i = 1; i <= row - 1; i++) {
            if (x[i] == column) return false;
            if (Math.abs(x[i] - column) == Math.abs(i - row)) return false;
        }
        return true;
    }

    public void queen(int row, int n) {
        for (int column = 1; column <= n; column++) {
            if (place(row, column)) {
                x[row] = column;
                if (row == n) {
                    printBoard(n);
                } else {
                    queen(row + 1, n);
                }
            }
        }
    }

    public void printBoard(int n) {
        System.out.println("\n\nSolution :" + (++count));
        for (int i = 1; i <= n; i++) {
            System.out.print(" " + i);
        }
        for (int i = 1; i <= n; i++) {
            System.out.print("\n\n" + i);
            for (int j = 1; j <= n; j++) {
                if (x[i] == j)
                    System.out.print(" Q");
                else
                    System.out.print(" -");
            }
        }
        System.out.println();
    }
}

public class NQueens {
    public static void main(String args[]) throws IOException {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the size of the chessboard (N): ");
        int n = scanner.nextInt();
        if (n == 2 || n == 3) {
            System.out.print("Not Possible");
        } else {
            Operation op = new Operation();
            op.queen(1, n);
        }
        scanner.close();
    }
}
